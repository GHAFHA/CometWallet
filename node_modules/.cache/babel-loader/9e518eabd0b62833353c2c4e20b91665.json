{"ast":null,"code":"/*\n    CS 3354.005 Fall 2022\n    Group 5: Dean Greenberg, Noel Johnson, Oscar Mata-Galvan, Vaughan McInerney, Ruchi Patel, Naod Tesfay\n    Professor Srimathi Srinivasan\n\n    This file created by Vaughan McInerney (vmm190002)\n\n    This is an implementation of the CreditCardAccount class.\n*/\n\nimport FinancialAccount from \"./FinancialAccount\";\nclass CreditCardAccount extends FinancialAccount {\n  constructor(displayName, cardNumber, cvvCode, expirationDate) {\n    super(displayName);\n    this.cardNumber = cardNumber;\n    this.cvvCode = cvvCode;\n    this.expirationDate = expirationDate;\n  }\n  getMaskedCreditCardNumber() {\n    let output = \"\";\n    let cardNumberString = \"\" + this.cardNumber;\n    for (let i = 0; i < cardNumberString.length - 4; i++) {\n      output += \"*\";\n    }\n    output += cardNumberString.substring(cardNumberString.length - 4);\n    return output;\n  }\n  static isValidCreditCardNumber(creditCardNumberToValidate) {\n    if (creditCardNumberToValidate == null) {\n      return false;\n    }\n    if (!typeof creditCardNumberToValidate === \"string\") {\n      return false;\n    } else if (creditCardNumberToValidate.length !== 16) {\n      return false;\n    }\n    for (let digit of creditCardNumberToValidate) {\n      if (digit < '0' || digit > '9') {\n        return false;\n      }\n    }\n    return true;\n  }\n  static isValidCvvCode(cvvCodeToValidate) {\n    if (cvvCodeToValidate == null) {\n      return false;\n    }\n    if (!typeof cvvCodeToValidate === \"string\") {\n      return false;\n    } else if (cvvCodeToValidate.length !== 3) {\n      return false;\n    }\n    for (let digit of cvvCodeToValidate) {\n      if (digit < '0' || digit > '9') {\n        return false;\n      }\n    }\n    return true;\n  }\n  static isValidExpirationDate(expirationDateToValidate) {\n    if (expirationDateToValidate == null) {\n      return false;\n    }\n    if (!typeof expirationDateToValidate === \"string\") {\n      return false;\n    } else if (expirationDateToValidate.length !== 7) {\n      return false;\n    }\n    return expirationDateToValidate[0] >= '0' && expirationDateToValidate[0] <= '9' && expirationDateToValidate[1] >= '0' && expirationDateToValidate[1] <= '9' && expirationDateToValidate[2] === '/' && expirationDateToValidate[3] >= '0' && expirationDateToValidate[3] <= '9' && expirationDateToValidate[4] >= '0' && expirationDateToValidate[4] <= '9' && expirationDateToValidate[5] >= '0' && expirationDateToValidate[5] <= '9' && expirationDateToValidate[6] >= '0' && expirationDateToValidate[6] <= '9';\n  }\n  static isValidFormData(formData) {\n    return this.isValidCreditCardNumber(formData.cardNumber) && this.isValidExpirationDate(formData.expirationDate) && this.isValidCvvCode(formData.cvv) && this.isValidDisplayName(formData.accountName);\n  }\n}\nexport default CreditCardAccount;","map":{"version":3,"names":["FinancialAccount","CreditCardAccount","constructor","displayName","cardNumber","cvvCode","expirationDate","getMaskedCreditCardNumber","output","cardNumberString","i","length","substring","isValidCreditCardNumber","creditCardNumberToValidate","digit","isValidCvvCode","cvvCodeToValidate","isValidExpirationDate","expirationDateToValidate","isValidFormData","formData","cvv","isValidDisplayName","accountName"],"sources":["/Users/noeljohnson/Documents/GitHub/bankingapp/src/components/classes/CreditCardAccount.js"],"sourcesContent":["/*\n    CS 3354.005 Fall 2022\n    Group 5: Dean Greenberg, Noel Johnson, Oscar Mata-Galvan, Vaughan McInerney, Ruchi Patel, Naod Tesfay\n    Professor Srimathi Srinivasan\n\n    This file created by Vaughan McInerney (vmm190002)\n\n    This is an implementation of the CreditCardAccount class.\n*/\n\nimport FinancialAccount from \"./FinancialAccount\";\n\nclass CreditCardAccount extends FinancialAccount {\n    constructor(displayName, cardNumber, cvvCode, expirationDate) {\n        super(displayName);\n        this.cardNumber = cardNumber;\n        this.cvvCode = cvvCode;\n        this.expirationDate = expirationDate;\n    }\n\n    getMaskedCreditCardNumber() {\n        let output = \"\";\n        let cardNumberString = \"\" + this.cardNumber\n        for(let i = 0; i < cardNumberString.length - 4; i++) {\n            output += \"*\";\n        }\n        output += cardNumberString.substring(cardNumberString.length - 4);\n        return output;\n    }\n\n    static isValidCreditCardNumber(creditCardNumberToValidate) {\n        if(creditCardNumberToValidate == null) {\n            return false;\n        }\n        if(!typeof(creditCardNumberToValidate) === \"string\") {\n            return false;\n        }\n        else if(creditCardNumberToValidate.length !== 16) {\n            return false;\n        }\n        for(let digit of creditCardNumberToValidate) {\n            if(digit < '0' || digit > '9') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    static isValidCvvCode(cvvCodeToValidate) {\n        if(cvvCodeToValidate == null) {\n            return false;\n        }\n        if(!typeof(cvvCodeToValidate) === \"string\") {\n            return false;\n        }\n        else if(cvvCodeToValidate.length !== 3) {\n            return false;\n        }\n        for(let digit of cvvCodeToValidate) {\n            if(digit < '0' || digit > '9') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    static isValidExpirationDate(expirationDateToValidate) {\n        if(expirationDateToValidate == null) {\n            return false;\n        }\n        if(!typeof(expirationDateToValidate) === \"string\") {\n            return false;\n        }\n        else if(expirationDateToValidate.length !== 7) {\n            return false;\n        }\n        return (\n            expirationDateToValidate[0] >= '0' && expirationDateToValidate[0] <= '9' &&\n            expirationDateToValidate[1] >= '0' && expirationDateToValidate[1] <= '9' &&\n            expirationDateToValidate[2] === '/' &&\n            expirationDateToValidate[3] >= '0' && expirationDateToValidate[3] <= '9' &&\n            expirationDateToValidate[4] >= '0' && expirationDateToValidate[4] <= '9' &&\n            expirationDateToValidate[5] >= '0' && expirationDateToValidate[5] <= '9' &&\n            expirationDateToValidate[6] >= '0' && expirationDateToValidate[6] <= '9'\n        );\n    }\n\n    static isValidFormData(formData) {\n        return (\n            this.isValidCreditCardNumber(formData.cardNumber) &&\n            this.isValidExpirationDate(formData.expirationDate) &&\n            this.isValidCvvCode(formData.cvv) &&\n            this.isValidDisplayName(formData.accountName)\n        )\n    }\n}\n\nexport default CreditCardAccount;"],"mappings":"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"},"metadata":{},"sourceType":"module"}